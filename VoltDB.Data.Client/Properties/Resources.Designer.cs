//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace VoltDB.Data.Client.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("VoltDB.Data.Client.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot use parameters in ad-hoc query: {0}..
        /// </summary>
        internal static string AdHocParameterQueriesNotAllowed {
            get {
                return ResourceManager.GetString("AdHocParameterQueriesNotAllowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ad-hoc queries are not allowed on this connection..
        /// </summary>
        internal static string AdhocQueriesNotAllowed {
            get {
                return ResourceManager.GetString("AdhocQueriesNotAllowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The AsyncResponse did not originate from this procedure wrapper..
        /// </summary>
        internal static string AsyncResponseMismatch {
            get {
                return ResourceManager.GetString("AsyncResponseMismatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Either EndExecute was called multiple times with the same AsyncResponse, or the response was consumed by an ExecuteAsyncCallback..
        /// </summary>
        internal static string AsyncResponseUsedUp {
            get {
                return ResourceManager.GetString("AsyncResponseUsedUp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Completion state was already set..
        /// </summary>
        internal static string AsyncResultSetAsCompletedAlreadyCalled {
            get {
                return ResourceManager.GetString("AsyncResultSetAsCompletedAlreadyCalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The background thread processing server responses died.  Connection will be closed..
        /// </summary>
        internal static string BackgroundNetworkThreadDied {
            get {
                return ResourceManager.GetString("BackgroundNetworkThreadDied", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The background thread processing timeout control died.  Connection will be closed..
        /// </summary>
        internal static string BackgroundTimeoutThreadDied {
            get {
                return ResourceManager.GetString("BackgroundTimeoutThreadDied", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connection callback execution engine could not queue user work item (system threading overload).
        /// </summary>
        internal static string CannotSpawnCallbackProcess {
            get {
                return ResourceManager.GetString("CannotSpawnCallbackProcess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Call to catalog procedure {0} not allowed on this connection.  System connections may not be used to access catalog-specific application procedures.  Use a standard connection..
        /// </summary>
        internal static string CatalogProcedureCallNotAllowed {
            get {
                return ResourceManager.GetString("CatalogProcedureCallNotAllowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cluster connection failed.  Details of connection errors below:
        ///{0}.
        /// </summary>
        internal static string ClusterConnectionFailure {
            get {
                return ResourceManager.GetString("ClusterConnectionFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cluster connection failed.  No single host could be reached.  Details of errors below:
        ///{0}.
        /// </summary>
        internal static string ClusterConnectionFailureNoSingleHost {
            get {
                return ResourceManager.GetString("ClusterConnectionFailureNoSingleHost", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}: {1}.
        /// </summary>
        internal static string ClusterConnectionSummaryRow {
            get {
                return ResourceManager.GetString("ClusterConnectionSummaryRow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cluster connection timeout.
        ///Connection Status Summary:
        ///{0}.
        /// </summary>
        internal static string ClusterConnectionTimeout {
            get {
                return ResourceManager.GetString("ClusterConnectionTimeout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cluster connection failed. Exception while dispatching connection requests..
        /// </summary>
        internal static string ClusterConnectionUnknownFailure {
            get {
                return ResourceManager.GetString("ClusterConnectionUnknownFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connection closed while posting request to the server..
        /// </summary>
        internal static string ConnectionClosedDuringAWrite {
            get {
                return ResourceManager.GetString("ConnectionClosedDuringAWrite", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connection to {0} failed: Exception while connecting to host..
        /// </summary>
        internal static string ConnectionFailure {
            get {
                return ResourceManager.GetString("ConnectionFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connection to {0} failed: Timeout while connecting to host..
        /// </summary>
        internal static string ConnectionTimeout {
            get {
                return ResourceManager.GetString("ConnectionTimeout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Advanced.
        /// </summary>
        internal static string CS_Category_Advanced {
            get {
                return ResourceManager.GetString("CS_Category_Advanced", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connection.
        /// </summary>
        internal static string CS_Category_Connection {
            get {
                return ResourceManager.GetString("CS_Category_Connection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pooling.
        /// </summary>
        internal static string CS_Category_Pooling {
            get {
                return ResourceManager.GetString("CS_Category_Pooling", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Security.
        /// </summary>
        internal static string CS_Category_Security {
            get {
                return ResourceManager.GetString("CS_Category_Security", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When true, access to ad-hoc queries will be granted.  Default: false.
        /// </summary>
        internal static string CS_Description_AllowAdhocQueries {
            get {
                return ResourceManager.GetString("CS_Description_AllowAdhocQueries", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When false, the connection mechanism will only create one connection per host, even if a host exposes multiple IP addresses: the first returned IP address will be used.  To ensure connection to a specific network interface, the user should specific hosts by IP address.  When true, the connection mechanism will (possibly) create 1 connection per exposed IP address.  This can be useful when the server uses multiple Ethernet adapters.  Default: false.
        /// </summary>
        internal static string CS_Description_AllowMultipleHostConnections {
            get {
                return ResourceManager.GetString("CS_Description_AllowMultipleHostConnections", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When true, access to system stored procedures (except ad-hoc queries) will be granted.  Default: false.
        /// </summary>
        internal static string CS_Description_AllowSystemCalls {
            get {
                return ResourceManager.GetString("CS_Description_AllowSystemCalls", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connection timeout (in ms).  Use a negative value for infinite timeout.  An exception will be raised if the connection to the server cannot be established within the requested timeout.  Default: 5000 ms.
        /// </summary>
        internal static string CS_Description_ConnectionTimeout {
            get {
                return ResourceManager.GetString("CS_Description_ConnectionTimeout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When true, a cluster connection will only succeed if it can open node connections to all the hosts/IPs in the provided host list. When false, it will connect to as many nodes as possible and be operational if at least one host could be connected to.  Default: false.
        /// </summary>
        internal static string CS_Description_ConnectToAllOrNone {
            get {
                return ResourceManager.GetString("CS_Description_ConnectToAllOrNone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The default command timeout (in ms) of execution requests.  Use a negative value for infinite timeout.  Default: 5000 ms.
        /// </summary>
        internal static string CS_Description_DefaultCommandTimeout {
            get {
                return ResourceManager.GetString("CS_Description_DefaultCommandTimeout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to List of server to connect to, separated by commas or spaces (DNS names or IP addresses).  Default: localhost..
        /// </summary>
        internal static string CS_Description_HostList {
            get {
                return ResourceManager.GetString("CS_Description_HostList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Number of execution requests to send to each child connection in round-robin fashion.  A larger number maximizes network usage on open sockets, however in case of transient failure means that possibly a larger number of items will be returned as failed.  Too large a number can cause specific host connections to be fire-hosed while other connections are idle.  A number between 100 and MaxOutstandingTxns is usually best.  Default: 100.
        /// </summary>
        internal static string CS_Description_LoadBalancingBatchSize {
            get {
                return ResourceManager.GetString("CS_Description_LoadBalancingBatchSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When true, the connection will issue Tracing messages that can be logged using a TraceListener.  This has an extremely negative impact on performance and should only be used for development and debugging.  Default: false.
        /// </summary>
        internal static string CS_Description_Logging {
            get {
                return ResourceManager.GetString("CS_Description_Logging", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maximum number of Queued transactions before blocking (pausing) execution requests.  Depending on your payload this number can be quite large, or small.  You can avoid performance degradation due to server &apos;fire-hosing&apos; by decreasing this value.  Default: 3000.
        /// </summary>
        internal static string CS_Description_MaxOutstandingTxns {
            get {
                return ResourceManager.GetString("CS_Description_MaxOutstandingTxns", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates the user ID to be used when connecting to the data source.  Default: empty.
        /// </summary>
        internal static string CS_Description_Password {
            get {
                return ResourceManager.GetString("CS_Description_Password", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When false, sensitive information (password), is not returned in the connection string.  Default: false.
        /// </summary>
        internal static string CS_Description_PersistSecurityInfo {
            get {
                return ResourceManager.GetString("CS_Description_PersistSecurityInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Port to use for TCP/IP connections.  Default: 21212.
        /// </summary>
        internal static string CS_Description_Port {
            get {
                return ResourceManager.GetString("CS_Description_Port", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type of cluster connection to open, &apos;database&apos; or &apos;export (&apos;export&apos; currently not supported).  Default: database..
        /// </summary>
        internal static string CS_Description_ServiceType {
            get {
                return ResourceManager.GetString("CS_Description_ServiceType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When true, the connection will monitor query execution performance (throughput and latency) and provide a framework for periodic reviews by a client application.  Impact on performance is minimal and the option is safe to use in production scenarios.  Default: false.
        /// </summary>
        internal static string CS_Description_Statistics {
            get {
                return ResourceManager.GetString("CS_Description_Statistics", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates the user ID to be used when connecting to the data source.  Default: empty.
        /// </summary>
        internal static string CS_Description_UserId {
            get {
                return ResourceManager.GetString("CS_Description_UserId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allows Adhoc Queries.
        /// </summary>
        internal static string CS_DisplayName_AllowAdhocQueries {
            get {
                return ResourceManager.GetString("CS_DisplayName_AllowAdhocQueries", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow Multiple Host Connections.
        /// </summary>
        internal static string CS_DisplayName_AllowMultipleHostConnections {
            get {
                return ResourceManager.GetString("CS_DisplayName_AllowMultipleHostConnections", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Root Access.
        /// </summary>
        internal static string CS_DisplayName_AllowSystemCalls {
            get {
                return ResourceManager.GetString("CS_DisplayName_AllowSystemCalls", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connect Timeout.
        /// </summary>
        internal static string CS_DisplayName_ConnectionTimeout {
            get {
                return ResourceManager.GetString("CS_DisplayName_ConnectionTimeout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connect to All or None.
        /// </summary>
        internal static string CS_DisplayName_ConnectToAllOrNone {
            get {
                return ResourceManager.GetString("CS_DisplayName_ConnectToAllOrNone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default Command Timeout.
        /// </summary>
        internal static string CS_DisplayName_DefaultCommandTimeout {
            get {
                return ResourceManager.GetString("CS_DisplayName_DefaultCommandTimeout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Host List.
        /// </summary>
        internal static string CS_DisplayName_HostList {
            get {
                return ResourceManager.GetString("CS_DisplayName_HostList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Load Balancing Batch Size.
        /// </summary>
        internal static string CS_DisplayName_LoadBalancingBatchSize {
            get {
                return ResourceManager.GetString("CS_DisplayName_LoadBalancingBatchSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Logging.
        /// </summary>
        internal static string CS_DisplayName_Logging {
            get {
                return ResourceManager.GetString("CS_DisplayName_Logging", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maximum Outstanding Transactions.
        /// </summary>
        internal static string CS_DisplayName_MaxOutstandingTxns {
            get {
                return ResourceManager.GetString("CS_DisplayName_MaxOutstandingTxns", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Password.
        /// </summary>
        internal static string CS_DisplayName_Password {
            get {
                return ResourceManager.GetString("CS_DisplayName_Password", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Persist Security Info.
        /// </summary>
        internal static string CS_DisplayName_PersistSecurityInfo {
            get {
                return ResourceManager.GetString("CS_DisplayName_PersistSecurityInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Port.
        /// </summary>
        internal static string CS_DisplayName_Port {
            get {
                return ResourceManager.GetString("CS_DisplayName_Port", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Service Type.
        /// </summary>
        internal static string CS_DisplayName_ServiceType {
            get {
                return ResourceManager.GetString("CS_DisplayName_ServiceType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Statistics.
        /// </summary>
        internal static string CS_DisplayName_Statistics {
            get {
                return ResourceManager.GetString("CS_DisplayName_Statistics", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User Id.
        /// </summary>
        internal static string CS_DisplayName_UserId {
            get {
                return ResourceManager.GetString("CS_DisplayName_UserId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to adhoc,allow adhoc queries,pigin,pigout.
        /// </summary>
        internal static string CS_ValidKeywords_AllowAdhocQueries {
            get {
                return ResourceManager.GetString("CS_ValidKeywords_AllowAdhocQueries", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to massconnect.
        /// </summary>
        internal static string CS_ValidKeywords_AllowMultipleHostConnections {
            get {
                return ResourceManager.GetString("CS_ValidKeywords_AllowMultipleHostConnections", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to allow system calls,root,system.
        /// </summary>
        internal static string CS_ValidKeywords_AllowSystemCalls {
            get {
                return ResourceManager.GetString("CS_ValidKeywords_AllowSystemCalls", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to connection timeout.
        /// </summary>
        internal static string CS_ValidKeywords_ConnectionTimeout {
            get {
                return ResourceManager.GetString("CS_ValidKeywords_ConnectionTimeout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to fullconnect.
        /// </summary>
        internal static string CS_ValidKeywords_ConnectToAllOrNone {
            get {
                return ResourceManager.GetString("CS_ValidKeywords_ConnectToAllOrNone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to command timeout.
        /// </summary>
        internal static string CS_ValidKeywords_DefaultCommandTimeout {
            get {
                return ResourceManager.GetString("CS_ValidKeywords_DefaultCommandTimeout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to hosts,servers,server list,cluster,ips.
        /// </summary>
        internal static string CS_ValidKeywords_HostList {
            get {
                return ResourceManager.GetString("CS_ValidKeywords_HostList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to balancing,multiplexing.
        /// </summary>
        internal static string CS_ValidKeywords_LoadBalancingBatchSize {
            get {
                return ResourceManager.GetString("CS_ValidKeywords_LoadBalancingBatchSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to log,trace,tracing,logging.
        /// </summary>
        internal static string CS_ValidKeywords_Logging {
            get {
                return ResourceManager.GetString("CS_ValidKeywords_Logging", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to transaction queue,txnq,maxq.
        /// </summary>
        internal static string CS_ValidKeywords_MaxOutstandingTxns {
            get {
                return ResourceManager.GetString("CS_ValidKeywords_MaxOutstandingTxns", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to pwd,pass.
        /// </summary>
        internal static string CS_ValidKeywords_Password {
            get {
                return ResourceManager.GetString("CS_ValidKeywords_Password", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to unsecured,unsecured credentials.
        /// </summary>
        internal static string CS_ValidKeywords_PersistSecurityInfo {
            get {
                return ResourceManager.GetString("CS_ValidKeywords_PersistSecurityInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to portnumber,p.
        /// </summary>
        internal static string CS_ValidKeywords_Port {
            get {
                return ResourceManager.GetString("CS_ValidKeywords_Port", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to type,service,service type.
        /// </summary>
        internal static string CS_ValidKeywords_ServiceType {
            get {
                return ResourceManager.GetString("CS_ValidKeywords_ServiceType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to stats,perf,performance.
        /// </summary>
        internal static string CS_ValidKeywords_Statistics {
            get {
                return ResourceManager.GetString("CS_ValidKeywords_Statistics", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to uid,username,user name,user.
        /// </summary>
        internal static string CS_ValidKeywords_UserId {
            get {
                return ResourceManager.GetString("CS_ValidKeywords_UserId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Elapsed Time:  {0,21}
        ///
        ///----------------------------------------
        /// Transactions
        ///----------------------------------------
        ///              Out : {1,10:##,0}
        ///               In : {2,10:##,0}
        ///           Failed : {3,10:##,0}
        ///          Timeout : {4,10:##,0}
        ///          Aborted : {5,10:##,0}
        ///          Pending : {6,10:##,0}
        ///----------------------------------------
        /// Throughput (TPS) : {7,10:##,0}
        ///
        ///
        ///----------------------------------------
        /// Network IO
        ///----------------------------------------
        ///
        ///             [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string DefaultStatisticsFormat {
            get {
                return ResourceManager.GetString("DefaultStatisticsFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0,21} :: Txn: {2,10:##,0} (F:{3,10:##,0}, T:{4,10:##,0}, A:{5,10:##,0}, P:{6,10:##,0}) @ {7,10:##,0} TPS | Lat: {8,10:0.00} &lt; {9,10:0.00} &lt; {10,10:0.00} | I/O: {21,10} / {20,10}.
        /// </summary>
        internal static string DefaultStatisticsShortFormat {
            get {
                return ResourceManager.GetString("DefaultStatisticsShortFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Execution was aborted on the client-side (server did not reply within {0} ms), however the server has been sent the request and will execute it..
        /// </summary>
        internal static string ExecutionClientAbort {
            get {
                return ResourceManager.GetString("ExecutionClientAbort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Execution timed-out on the client-side (server did not reply within {0} ms), however the server has been sent the request and will execute it..
        /// </summary>
        internal static string ExecutionTimeout {
            get {
                return ResourceManager.GetString("ExecutionTimeout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Export data connection not yet supported..
        /// </summary>
        internal static string ExportConnectionNotSupported {
            get {
                return ResourceManager.GetString("ExportConnectionNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Inconsistent cluster targets: the provided host list points to different applications or to servers running different engine versions.
        ///Connected Node(s):
        ///{0}
        ///Rejected Node:
        ///{1}
        ///Cluster connection will not be allowed..
        /// </summary>
        internal static string InconsistentClusterTarget {
            get {
                return ResourceManager.GetString("InconsistentClusterTarget", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}-{1}: Node Details:
        /// - HostId: {0}
        /// - HostConnectionId: {1}
        /// - Host EndPoint: {2}
        /// - Leader EndPoint: {3}
        /// - Cluster Start Time: {4}
        /// - Server Build: {5}.
        /// </summary>
        internal static string InconsistentClusterTargetListing {
            get {
                return ResourceManager.GetString("InconsistentClusterTargetListing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid Cast between underlying VoltDB data type &apos;{0}&apos; and requested .NET data type &apos;{1}&apos;.
        /// </summary>
        internal static string InvalidCastException {
            get {
                return ResourceManager.GetString("InvalidCastException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid column count: {0} when requested result was a single-column table..
        /// </summary>
        internal static string InvalidColumnCount {
            get {
                return ResourceManager.GetString("InvalidColumnCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid connection status: {0}..
        /// </summary>
        internal static string InvalidConnectionStatus {
            get {
                return ResourceManager.GetString("InvalidConnectionStatus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid connection settings: host list &apos;{0}&apos; cannot be resolved to available IP endpoints..
        /// </summary>
        internal static string InvalidConnectionStringHostList {
            get {
                return ResourceManager.GetString("InvalidConnectionStringHostList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The requested value &apos;{0}&apos; is invalid for the given keyword &apos;{1}&apos;..
        /// </summary>
        internal static string InvalidConnectionStringValue {
            get {
                return ResourceManager.GetString("InvalidConnectionStringValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid characters in procedure name. (Note: for @ system procedures, use the connection&apos;s System property).
        /// </summary>
        internal static string InvalidProcedureName {
            get {
                return ResourceManager.GetString("InvalidProcedureName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid resultset: {0} tables are present..
        /// </summary>
        internal static string InvalidResultsetSize {
            get {
                return ResourceManager.GetString("InvalidResultsetSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid row / column count: {0} / {1} when requested result was a single cell value..
        /// </summary>
        internal static string InvalidRowAndColumnCount {
            get {
                return ResourceManager.GetString("InvalidRowAndColumnCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid row count: {0} when requested result was a single-row table..
        /// </summary>
        internal static string InvalidRowCount {
            get {
                return ResourceManager.GetString("InvalidRowCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid string length: {0}..
        /// </summary>
        internal static string InvalidStringLength {
            get {
                return ResourceManager.GetString("InvalidStringLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid Timeout value provided: {0}.  Use Timeout.Infinite or -1 for an infinite timeout, or a positive value..
        /// </summary>
        internal static string InvalidTimeoutValue {
            get {
                return ResourceManager.GetString("InvalidTimeoutValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; is an illegal value for a boolean option..
        /// </summary>
        internal static string InvalidValueForBoolean {
            get {
                return ResourceManager.GetString("InvalidValueForBoolean", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid binary data length: {0}..
        /// </summary>
        internal static string InvalidVarbinaryLength {
            get {
                return ResourceManager.GetString("InvalidVarbinaryLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Timeout in IO operation..
        /// </summary>
        internal static string IOTimeout {
            get {
                return ResourceManager.GetString("IOTimeout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Keyword not supported..
        /// </summary>
        internal static string KeywordNotSupported {
            get {
                return ResourceManager.GetString("KeywordNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connection to {0} failed: Failed parsing server login response..
        /// </summary>
        internal static string LR_FailedParsingResponse {
            get {
                return ResourceManager.GetString("LR_FailedParsingResponse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connection to {0} failed: Server rejected the connection after the client failed to send login request. (Status: {1}).
        /// </summary>
        internal static string LRS_ConnectionHandshakeTimeout {
            get {
                return ResourceManager.GetString("LRS_ConnectionHandshakeTimeout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connection to {0} failed: Server received a corrupted login message. (Status: {1}).
        /// </summary>
        internal static string LRS_CorruptedHandshake {
            get {
                return ResourceManager.GetString("LRS_CorruptedHandshake", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connection to {0} failed: Invalid credentials provided. (Status: {1}).
        /// </summary>
        internal static string LRS_InvalidCredentials {
            get {
                return ResourceManager.GetString("LRS_InvalidCredentials", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connection to {0} failed: Server too busy. (Status: {1}).
        /// </summary>
        internal static string LRS_ServerTooBusy {
            get {
                return ResourceManager.GetString("LRS_ServerTooBusy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connection to {0} failed: Unknown login response provided by the server. (Status: {1}).
        /// </summary>
        internal static string LRS_Unknown {
            get {
                return ResourceManager.GetString("LRS_Unknown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to String data of length {0} exceeds maximum supported VoltDB length of {1} bytes..
        /// </summary>
        internal static string MaximumStringLengthViolation {
            get {
                return ResourceManager.GetString("MaximumStringLengthViolation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Binary data of length {0} exceeds maximum supported VoltDB length of {1} bytes..
        /// </summary>
        internal static string MaximumVarbinaryLengthViolation {
            get {
                return ResourceManager.GetString("MaximumVarbinaryLengthViolation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid Message Length: {0} (Maximum: {1}).
        /// </summary>
        internal static string ProtocolMessageLengthInvalid {
            get {
                return ResourceManager.GetString("ProtocolMessageLengthInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Protocol Version mismatch: Client: {0}, Server: {1}..
        /// </summary>
        internal static string ProtocolVersionMismatch {
            get {
                return ResourceManager.GetString("ProtocolVersionMismatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Request aborted: Status: {0}.\r\nServer message:\r\n{1}.
        /// </summary>
        internal static string RequestAborted {
            get {
                return ResourceManager.GetString("RequestAborted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Request could not be posted to the server..
        /// </summary>
        internal static string RequestExecutionFailure {
            get {
                return ResourceManager.GetString("RequestExecutionFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Request failure: Status: {0}.\r\nServer message:\r\n{1}.
        /// </summary>
        internal static string RequestFailure {
            get {
                return ResourceManager.GetString("RequestFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Deserialization of server response failed..
        /// </summary>
        internal static string ResponseDeserializationFailure {
            get {
                return ResourceManager.GetString("ResponseDeserializationFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Server failure while processing request: Status: {0}.\r\nServer message:\r\n{1}.
        /// </summary>
        internal static string ServerFailure {
            get {
                return ResourceManager.GetString("ServerFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Statistics are not enabled.  This function is not availble..
        /// </summary>
        internal static string StatisticsDisabled {
            get {
                return ResourceManager.GetString("StatisticsDisabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to System calls are not allowed on this connection..
        /// </summary>
        internal static string SystemCallNotAllowed {
            get {
                return ResourceManager.GetString("SystemCallNotAllowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cluster connection closed..
        /// </summary>
        internal static string TraceClusterConnectionClosed {
            get {
                return ResourceManager.GetString("TraceClusterConnectionClosed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cluster connection closing..
        /// </summary>
        internal static string TraceClusterConnectionClosing {
            get {
                return ResourceManager.GetString("TraceClusterConnectionClosing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cluster connection draining completed..
        /// </summary>
        internal static string TraceClusterConnectionDrainingCompleted {
            get {
                return ResourceManager.GetString("TraceClusterConnectionDrainingCompleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cluster connection draining started..
        /// </summary>
        internal static string TraceClusterConnectionDrainingStarted {
            get {
                return ResourceManager.GetString("TraceClusterConnectionDrainingStarted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cluster connection opened.
        /// - Leader EndPoint: {0}
        /// - Cluster Start Time: {1}
        /// - Server Build: {2}
        ///
        ///Connection Status Summary:
        ///{3}.
        /// </summary>
        internal static string TraceClusterConnectionOpened {
            get {
                return ResourceManager.GetString("TraceClusterConnectionOpened", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}-{1}: Connection closed..
        /// </summary>
        internal static string TraceConnectionClosed {
            get {
                return ResourceManager.GetString("TraceConnectionClosed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}-{1}: Connection closing..
        /// </summary>
        internal static string TraceConnectionClosing {
            get {
                return ResourceManager.GetString("TraceConnectionClosing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}-{1}: Connection draining completed..
        /// </summary>
        internal static string TraceConnectionDrainingCompleted {
            get {
                return ResourceManager.GetString("TraceConnectionDrainingCompleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}-{1}: Connection draining started..
        /// </summary>
        internal static string TraceConnectionDrainingStarted {
            get {
                return ResourceManager.GetString("TraceConnectionDrainingStarted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}-{1}: Connection opened.
        /// - HostId: {0}
        /// - HostConnectionId: {1}
        /// - Host EndPoint: {2}
        /// - Leader EndPoint: {3}
        /// - Cluster Start Time: {4}
        /// - Server Build: {5}.
        /// </summary>
        internal static string TraceConnectionOpened {
            get {
                return ResourceManager.GetString("TraceConnectionOpened", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to AsyncResponse origin was lost (Execution Id: {0}).  The call cannot be cancelled..
        /// </summary>
        internal static string TraceExecuteCancelAsyncLost {
            get {
                return ResourceManager.GetString("TraceExecuteCancelAsyncLost", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}-{1}: Execution aborted: #{1} (Procedure: {2}) - Abort called after {3} ms..
        /// </summary>
        internal static string TraceExecutionAborted {
            get {
                return ResourceManager.GetString("TraceExecutionAborted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}-{1}: Execution completed: #{1}..
        /// </summary>
        internal static string TraceExecutionCompleted {
            get {
                return ResourceManager.GetString("TraceExecutionCompleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}-{1}: Execution failed: #{1} (Procedure: {2}) - Failure after {3} ms..
        /// </summary>
        internal static string TraceExecutionFailed {
            get {
                return ResourceManager.GetString("TraceExecutionFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}-{1}: Execution started: #{1} (Procedure: {2}).
        /// </summary>
        internal static string TraceExecutionStarted {
            get {
                return ResourceManager.GetString("TraceExecutionStarted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}-{1}: Execution timed-out: #{1} (Procedure: {2}) - Time-out after {3} ms..
        /// </summary>
        internal static string TraceExecutionTimedout {
            get {
                return ResourceManager.GetString("TraceExecutionTimedout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to VoltDB data type &apos;{0}&apos; is not supported by this version of the client library..
        /// </summary>
        internal static string UnsupportedDBType {
            get {
                return ResourceManager.GetString("UnsupportedDBType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .NET data type &apos;{0}&apos; does not map to a supported VoltDB data type..
        /// </summary>
        internal static string UnsupportedNETTypeToDBType {
            get {
                return ResourceManager.GetString("UnsupportedNETTypeToDBType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .NET data type &apos;{0}&apos; does not map to a supported VoltDB procedure parameter data type..
        /// </summary>
        internal static string UnsupportedParameterNETType {
            get {
                return ResourceManager.GetString("UnsupportedParameterNETType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Service Type &apos;{0}&apos; is not supported by this version of the client library..
        /// </summary>
        internal static string UnsupportedServiceType {
            get {
                return ResourceManager.GetString("UnsupportedServiceType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Value is outside of the VoltDecimal type acceptable range: &apos;{0}&apos;..
        /// </summary>
        internal static string VoltDecimalOutsideOfRange {
            get {
                return ResourceManager.GetString("VoltDecimalOutsideOfRange", resourceCulture);
            }
        }
    }
}
